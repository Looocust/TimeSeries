[["modulo-1.-descripci√≥n.-cu√°l-es-la-din√°mica-de-este-tipo-de-datos.html", "Cap√≠tulo 3 Modulo 1. Descripci√≥n. ¬øCu√°l es la din√°mica de este tipo de datos?", " Cap√≠tulo 3 Modulo 1. Descripci√≥n. ¬øCu√°l es la din√°mica de este tipo de datos? # Se instala lo necesario para proceder library(tidyverse) # dplyr, ggplot2, etc. library(readxl) # leer archivos .xlsx library(lubridate) # manejo de fechas library(zoo) # promedios m√≥viles library(forecast) # funciones de series de tiempo # Leer la primera hoja (c√°mbiala con `sheet =` si hiciera falta) retail &lt;- read_excel(&quot;Online Retail 2.xlsx&quot;) # Vistazo r√°pido a la estructura dplyr::glimpse(retail) ## Rows: 541,909 ## Columns: 8 ## $ InvoiceNo &lt;chr&gt; &quot;536365&quot;, &quot;536365&quot;, &quot;536365&quot;, &quot;536365&quot;, &quot;536365&quot;, &quot;536365&quot;‚Ä¶ ## $ StockCode &lt;chr&gt; &quot;85123A&quot;, &quot;71053&quot;, &quot;84406B&quot;, &quot;84029G&quot;, &quot;84029E&quot;, &quot;22752&quot;, ‚Ä¶ ## $ Description &lt;chr&gt; &quot;WHITE HANGING HEART T-LIGHT HOLDER&quot;, &quot;WHITE METAL LANTERN‚Ä¶ ## $ Quantity &lt;dbl&gt; 6, 6, 8, 6, 6, 2, 6, 6, 6, 32, 6, 6, 8, 6, 6, 3, 2, 3, 3, ‚Ä¶ ## $ InvoiceDate &lt;dttm&gt; 2010-12-01 08:26:00, 2010-12-01 08:26:00, 2010-12-01 08:2‚Ä¶ ## $ UnitPrice &lt;dbl&gt; 2.55, 3.39, 2.75, 3.39, 3.39, 7.65, 4.25, 1.85, 1.85, 1.69‚Ä¶ ## $ CustomerID &lt;dbl&gt; 17850, 17850, 17850, 17850, 17850, 17850, 17850, 17850, 17‚Ä¶ ## $ Country &lt;chr&gt; &quot;United Kingdom&quot;, &quot;United Kingdom&quot;, &quot;United Kingdom&quot;, &quot;Uni‚Ä¶ ## --- 1. Agregar la cantidad por d√≠a ---------------------------------- # Aseguramos que &#39;InvoiceDate&#39; sea fecha-hora y creamos la columna Date retail &lt;- retail %&gt;% mutate(Date = as.Date(InvoiceDate)) # Sumamos la cantidad vendida por d√≠a daily_sales &lt;- retail %&gt;% group_by(Date) %&gt;% summarise(TotalQty = sum(Quantity, na.rm = TRUE)) %&gt;% ungroup() ## --- 2. Gr√°fico base de la serie diaria ------------------------------ library(ggplot2) ggplot(daily_sales, aes(Date, TotalQty)) + geom_line(color = &quot;gray40&quot;) + labs(title = &quot;Cantidad total vendida por d√≠a&quot;, x = &quot;Fecha&quot;, y = &quot;Total de unidades&quot;) + theme_minimal() library(dplyr) library(zoo) # Crear tabla con medias m√≥viles daily_ma &lt;- daily_sales %&gt;% arrange(Date) %&gt;% mutate( MA_7 = zoo::rollmeanr(TotalQty, 7, fill = NA), MA_30 = zoo::rollmeanr(TotalQty, 30, fill = NA) ) names(daily_ma) ## [1] &quot;Date&quot; &quot;TotalQty&quot; &quot;MA_7&quot; &quot;MA_30&quot; library(ggplot2) ggplot(daily_ma, aes(Date)) + geom_line(aes(y = TotalQty), colour = &quot;grey70&quot;) + geom_line(aes(y = MA_7), colour = &quot;blue&quot;) + geom_line(aes(y = MA_30), colour = &quot;green&quot;) + labs(title = &quot;Promedios m√≥viles de 7 y 30 d√≠as&quot;, y = &quot;Total de unidades&quot;) + theme_minimal() ## Warning: Removed 6 rows containing missing values or values outside the scale range ## (`geom_line()`). ## Warning: Removed 29 rows containing missing values or values outside the scale range ## (`geom_line()`). La media m√≥vil de 30 d√≠as (l√≠nea roja) muestra una tendencia ascendente clara desde mayo-2011, mientras que la de 7 d√≠as (azul) revela picos semanales. library(dplyr) library(ggplot2) daily_lag &lt;- daily_sales %&gt;% # usamos la tabla diaria original arrange(Date) %&gt;% mutate( Lag_1 = dplyr::lag(TotalQty, 1), Lag_7 = dplyr::lag(TotalQty, 7) ) ggplot(daily_lag, aes(Date)) + geom_line(aes(y = TotalQty), colour = &quot;black&quot;) + geom_line(aes(y = Lag_1), colour = &quot;orange&quot;, linetype = &quot;dashed&quot;) + geom_line(aes(y = Lag_7), colour = &quot;purple&quot;, linetype = &quot;dotted&quot;) + labs(title = &quot;Serie comparada con rezagos de 1 y 7 d√≠as&quot;, y = &quot;Total de unidades&quot;) + theme_minimal() ## Warning: Removed 1 row containing missing values or values outside the scale range ## (`geom_line()`). ## Warning: Removed 7 rows containing missing values or values outside the scale range ## (`geom_line()`). La superposici√≥n con el rezago de 1 d√≠a (naranja) indica alta autocorrelaci√≥n diaria; el rezago-7 (morado) refuerza la periodicidad semanal. library(forecast) # ya lo tienes cargado library(ggplot2) # 1. Convertir la columna TotalQty en un objeto ts semanal ts_qty &lt;- ts(daily_sales$TotalQty, frequency = 7) # 2. Descomponer con STL decomp &lt;- stl(ts_qty, s.window = &quot;periodic&quot;) # 3. Graficar los componentes autoplot(decomp) + labs(title = &quot;Descomposici√≥n STL: tendencia, estacionalidad y residuales&quot;) El componente seasonal presenta oscilaciones regulares cada 7 puntos, confirmando efecto semanal; la tendencia suavizada muestra un crecimiento paulatino en la demanda. PRUEBAS DE ESTACIONARIEDAD (ADF &amp; KPSS) library(tseries) #‚Äì‚Äì‚Äì 1. Dickey‚ÄìFuller aumentada ‚Äì‚Äì‚Äì# adf_result &lt;- adf.test(ts_qty, alternative = &quot;stationary&quot;) adf_result$p.value # &lt; 0.05 ‚áí estacionaria ## [1] 0.01 #‚Äì‚Äì‚Äì 2. KPSS (complementaria) ‚Äì‚Äì‚Äì# kpss_result &lt;- kpss.test(ts_qty, null = &quot;Level&quot;) kpss_result$p.value # &gt; 0.05 ‚áí no se rechaza estacionariedad ## [1] 0.01 En este caso podemos evidenciar que las dos pruebas miran la estacionariedad desde lados opuestos: La ADF busca evidencia de que hay una tendencia aleatoria, y si la p-value es baja, dice que no la hay ‚Üí entonces la serie es estacionaria. La KPSS parte diciendo que la serie s√≠ es estacionaria, y si la p-value es baja, entonces te dice no conf√≠es, no lo es. ADF = 0.01 ‚áí la serie podr√≠a ser estacionaria KPSS = 0.01 ‚áí la serie no lo es üìå Cuando ambas pruebas contradicen, se interpreta que la serie: ‚û§ No es estacionaria en nivel, pero podr√≠a volverse estacionaria si quitamos la tendencia (es decir, con una diferenciaci√≥n o eliminando tendencia). ts_qty &lt;- ts(daily_sales$TotalQty, frequency = 7) ts_diff1 &lt;- diff(ts_qty, 1) # Graficamos para ver c√≥mo luce autoplot(ts_diff1) + labs(title = &quot;Serie diferenciada (orden 1)&quot;, y = &quot;Diferencias&quot;) # Nuevas pruebas adf.test(ts_diff1) ## Warning in adf.test(ts_diff1): p-value smaller than printed p-value ## ## Augmented Dickey-Fuller Test ## ## data: ts_diff1 ## Dickey-Fuller = -10.57, Lag order = 6, p-value = 0.01 ## alternative hypothesis: stationary kpss.test(ts_diff1, null = &quot;Level&quot;) ## Warning in kpss.test(ts_diff1, null = &quot;Level&quot;): p-value greater than printed ## p-value ## ## KPSS Test for Level Stationarity ## ## data: ts_diff1 ## KPSS Level = 0.034586, Truncation lag parameter = 5, p-value = 0.1 adf.test(ts_diff1) ## Warning in adf.test(ts_diff1): p-value smaller than printed p-value ## ## Augmented Dickey-Fuller Test ## ## data: ts_diff1 ## Dickey-Fuller = -10.57, Lag order = 6, p-value = 0.01 ## alternative hypothesis: stationary kpss.test(ts_diff1, null = &quot;Level&quot;) ## Warning in kpss.test(ts_diff1, null = &quot;Level&quot;): p-value greater than printed ## p-value ## ## KPSS Test for Level Stationarity ## ## data: ts_diff1 ## KPSS Level = 0.034586, Truncation lag parameter = 5, p-value = 0.1 Al aplicar las pruebas de estacionariedad a la serie original, se obtuvieron resultados contradictorios: la prueba de Dickey‚ÄìFuller aumentada (ADF) arroj√≥ un p-valor de 0.01, indicando estacionariedad, mientras que la prueba KPSS entreg√≥ un p-valor de 0.01, rechazando la hip√≥tesis de estacionariedad. Esto sugiere que la serie no es estacionaria en nivel y presenta una tendencia determinista. Por tanto, se aplic√≥ una diferenciaci√≥n de primer orden, con el objetivo de eliminar la tendencia y estabilizar la media. Posteriormente, al evaluar la serie diferenciada: ADF mostr√≥ un p-valor de 0.01, lo que confirma estacionariedad, y KPSS arroj√≥ un p-valor mayor a 0.1, lo que no rechaza la estacionariedad. Se concluye que la serie diferenciada es estacionaria, por lo que es adecuada para modelarse con t√©cnicas como ARIMA o SARIMA, considerando un par√°metro d = 1. 3.0.1 Transformaci√≥n Box-Cox library(forecast) # Paso 1: Aseg√∫rate de tener tu serie definida ts_qty &lt;- ts(daily_sales$TotalQty, frequency = 7) # Paso 2: Calcula lambda lambda &lt;- BoxCox.lambda(ts_qty) ## Warning in guerrero(x, lower, upper): Guerrero&#39;s method for selecting a Box-Cox ## parameter (lambda) is given for strictly positive data. # Paso 3: Aplica la transformaci√≥n ts_boxcox &lt;- BoxCox(ts_qty, lambda = lambda) # Paso 4: Grafica autoplot(ts_boxcox) + labs(title = paste(&quot;Transformaci√≥n Box-Cox con lambda =&quot;, round(lambda, 2)), y = &quot;Ventas transformadas&quot;) Con el fin de estabilizar la varianza de la serie TotalQty, se aplic√≥ una transformaci√≥n Box-Cox, la cual estima autom√°ticamente el par√°metro Œª (lambda). En este caso, el valor obtenido fue Œª = 0.47, lo que indica que la serie original presenta cierta heterocedasticidad (variaci√≥n de la varianza en el tiempo). La transformaci√≥n tuvo como objetivo suavizar las fluctuaciones extremas de la serie, logrando una distribuci√≥n m√°s sim√©trica y facilitando su uso en modelos como ARIMA o SARIMA. En el gr√°fico se observa una reducci√≥n parcial de los picos m√°s altos y una mayor estabilidad en la amplitud de las oscilaciones. Por tanto, se concluye que la aplicaci√≥n de la transformaci√≥n Box-Cox fue √∫til para mejorar la estructura estad√≠stica de la serie antes de su modelado. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
